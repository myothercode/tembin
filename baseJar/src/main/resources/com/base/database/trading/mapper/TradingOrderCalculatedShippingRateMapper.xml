<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.base.database.trading.mapper.TradingOrderCalculatedShippingRateMapper">
  <resultMap id="BaseResultMap" type="com.base.database.trading.model.TradingOrderCalculatedShippingRate">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="originatingPostalCode" jdbcType="VARCHAR" property="originatingpostalcode" />
    <result column="packageDepth" jdbcType="INTEGER" property="packagedepth" />
    <result column="packageLength" jdbcType="INTEGER" property="packagelength" />
    <result column="packageWidth" jdbcType="INTEGER" property="packagewidth" />
    <result column="packagingHandlingCosts" jdbcType="DOUBLE" property="packaginghandlingcosts" />
    <result column="shippingIrregular" jdbcType="VARCHAR" property="shippingirregular" />
    <result column="shippingPackage" jdbcType="VARCHAR" property="shippingpackage" />
    <result column="weightMajor" jdbcType="INTEGER" property="weightmajor" />
    <result column="weightMinor" jdbcType="INTEGER" property="weightminor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, originatingPostalCode, packageDepth, packageLength, packageWidth, packagingHandlingCosts, 
    shippingIrregular, shippingPackage, weightMajor, weightMinor
  </sql>
  <select id="selectByExample" parameterType="com.base.database.trading.model.TradingOrderCalculatedShippingRateExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trading_order_calculatedshippingrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from trading_order_calculatedshippingrate
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from trading_order_calculatedshippingrate
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.base.database.trading.model.TradingOrderCalculatedShippingRateExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from trading_order_calculatedshippingrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.base.database.trading.model.TradingOrderCalculatedShippingRate">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into trading_order_calculatedshippingrate (id, originatingPostalCode, packageDepth, 
      packageLength, packageWidth, packagingHandlingCosts, 
      shippingIrregular, shippingPackage, weightMajor, 
      weightMinor)
    values (#{id,jdbcType=BIGINT}, #{originatingpostalcode,jdbcType=VARCHAR}, #{packagedepth,jdbcType=INTEGER}, 
      #{packagelength,jdbcType=INTEGER}, #{packagewidth,jdbcType=INTEGER}, #{packaginghandlingcosts,jdbcType=DOUBLE}, 
      #{shippingirregular,jdbcType=VARCHAR}, #{shippingpackage,jdbcType=VARCHAR}, #{weightmajor,jdbcType=INTEGER}, 
      #{weightminor,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.base.database.trading.model.TradingOrderCalculatedShippingRate">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into trading_order_calculatedshippingrate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="originatingpostalcode != null">
        originatingPostalCode,
      </if>
      <if test="packagedepth != null">
        packageDepth,
      </if>
      <if test="packagelength != null">
        packageLength,
      </if>
      <if test="packagewidth != null">
        packageWidth,
      </if>
      <if test="packaginghandlingcosts != null">
        packagingHandlingCosts,
      </if>
      <if test="shippingirregular != null">
        shippingIrregular,
      </if>
      <if test="shippingpackage != null">
        shippingPackage,
      </if>
      <if test="weightmajor != null">
        weightMajor,
      </if>
      <if test="weightminor != null">
        weightMinor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="originatingpostalcode != null">
        #{originatingpostalcode,jdbcType=VARCHAR},
      </if>
      <if test="packagedepth != null">
        #{packagedepth,jdbcType=INTEGER},
      </if>
      <if test="packagelength != null">
        #{packagelength,jdbcType=INTEGER},
      </if>
      <if test="packagewidth != null">
        #{packagewidth,jdbcType=INTEGER},
      </if>
      <if test="packaginghandlingcosts != null">
        #{packaginghandlingcosts,jdbcType=DOUBLE},
      </if>
      <if test="shippingirregular != null">
        #{shippingirregular,jdbcType=VARCHAR},
      </if>
      <if test="shippingpackage != null">
        #{shippingpackage,jdbcType=VARCHAR},
      </if>
      <if test="weightmajor != null">
        #{weightmajor,jdbcType=INTEGER},
      </if>
      <if test="weightminor != null">
        #{weightminor,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.base.database.trading.model.TradingOrderCalculatedShippingRateExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from trading_order_calculatedshippingrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_order_calculatedshippingrate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.originatingpostalcode != null">
        originatingPostalCode = #{record.originatingpostalcode,jdbcType=VARCHAR},
      </if>
      <if test="record.packagedepth != null">
        packageDepth = #{record.packagedepth,jdbcType=INTEGER},
      </if>
      <if test="record.packagelength != null">
        packageLength = #{record.packagelength,jdbcType=INTEGER},
      </if>
      <if test="record.packagewidth != null">
        packageWidth = #{record.packagewidth,jdbcType=INTEGER},
      </if>
      <if test="record.packaginghandlingcosts != null">
        packagingHandlingCosts = #{record.packaginghandlingcosts,jdbcType=DOUBLE},
      </if>
      <if test="record.shippingirregular != null">
        shippingIrregular = #{record.shippingirregular,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingpackage != null">
        shippingPackage = #{record.shippingpackage,jdbcType=VARCHAR},
      </if>
      <if test="record.weightmajor != null">
        weightMajor = #{record.weightmajor,jdbcType=INTEGER},
      </if>
      <if test="record.weightminor != null">
        weightMinor = #{record.weightminor,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_order_calculatedshippingrate
    set id = #{record.id,jdbcType=BIGINT},
      originatingPostalCode = #{record.originatingpostalcode,jdbcType=VARCHAR},
      packageDepth = #{record.packagedepth,jdbcType=INTEGER},
      packageLength = #{record.packagelength,jdbcType=INTEGER},
      packageWidth = #{record.packagewidth,jdbcType=INTEGER},
      packagingHandlingCosts = #{record.packaginghandlingcosts,jdbcType=DOUBLE},
      shippingIrregular = #{record.shippingirregular,jdbcType=VARCHAR},
      shippingPackage = #{record.shippingpackage,jdbcType=VARCHAR},
      weightMajor = #{record.weightmajor,jdbcType=INTEGER},
      weightMinor = #{record.weightminor,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.base.database.trading.model.TradingOrderCalculatedShippingRate">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_order_calculatedshippingrate
    <set>
      <if test="originatingpostalcode != null">
        originatingPostalCode = #{originatingpostalcode,jdbcType=VARCHAR},
      </if>
      <if test="packagedepth != null">
        packageDepth = #{packagedepth,jdbcType=INTEGER},
      </if>
      <if test="packagelength != null">
        packageLength = #{packagelength,jdbcType=INTEGER},
      </if>
      <if test="packagewidth != null">
        packageWidth = #{packagewidth,jdbcType=INTEGER},
      </if>
      <if test="packaginghandlingcosts != null">
        packagingHandlingCosts = #{packaginghandlingcosts,jdbcType=DOUBLE},
      </if>
      <if test="shippingirregular != null">
        shippingIrregular = #{shippingirregular,jdbcType=VARCHAR},
      </if>
      <if test="shippingpackage != null">
        shippingPackage = #{shippingpackage,jdbcType=VARCHAR},
      </if>
      <if test="weightmajor != null">
        weightMajor = #{weightmajor,jdbcType=INTEGER},
      </if>
      <if test="weightminor != null">
        weightMinor = #{weightminor,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.base.database.trading.model.TradingOrderCalculatedShippingRate">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_order_calculatedshippingrate
    set originatingPostalCode = #{originatingpostalcode,jdbcType=VARCHAR},
      packageDepth = #{packagedepth,jdbcType=INTEGER},
      packageLength = #{packagelength,jdbcType=INTEGER},
      packageWidth = #{packagewidth,jdbcType=INTEGER},
      packagingHandlingCosts = #{packaginghandlingcosts,jdbcType=DOUBLE},
      shippingIrregular = #{shippingirregular,jdbcType=VARCHAR},
      shippingPackage = #{shippingpackage,jdbcType=VARCHAR},
      weightMajor = #{weightmajor,jdbcType=INTEGER},
      weightMinor = #{weightminor,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>