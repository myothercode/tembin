<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.base.database.trading.mapper.TradingReturnpolicyMapper">
  <resultMap id="BaseResultMap" type="com.base.database.trading.model.TradingReturnpolicy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="EAN" jdbcType="VARCHAR" property="ean" />
    <result column="ExtendedHolidayReturns" jdbcType="VARCHAR" property="extendedholidayreturns" />
    <result column="RefundOption" jdbcType="VARCHAR" property="refundoption" />
    <result column="RestockingFeeValueOption" jdbcType="VARCHAR" property="restockingfeevalueoption" />
    <result column="ReturnsAcceptedOption" jdbcType="VARCHAR" property="returnsacceptedoption" />
    <result column="ReturnsWithinOption" jdbcType="VARCHAR" property="returnswithinoption" />
    <result column="ShippingCostPaidByOption" jdbcType="VARCHAR" property="shippingcostpaidbyoption" />
    <result column="WarrantyDurationOption" jdbcType="VARCHAR" property="warrantydurationoption" />
    <result column="WarrantyOfferedOption" jdbcType="VARCHAR" property="warrantyofferedoption" />
    <result column="WarrantyTypeOption" jdbcType="VARCHAR" property="warrantytypeoption" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="site" jdbcType="VARCHAR" property="site" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.base.database.trading.model.TradingReturnpolicy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="Description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, EAN, ExtendedHolidayReturns, RefundOption, RestockingFeeValueOption, ReturnsAcceptedOption, 
    ReturnsWithinOption, ShippingCostPaidByOption, WarrantyDurationOption, WarrantyOfferedOption, 
    WarrantyTypeOption, create_user, create_time, uuid, name, site
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    Description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.base.database.trading.model.TradingReturnpolicyExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from trading_returnpolicy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by $orderByClause$
    </if>
  </select>
  <select id="selectByExample" parameterType="com.base.database.trading.model.TradingReturnpolicyExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trading_returnpolicy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from trading_returnpolicy
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from trading_returnpolicy
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.base.database.trading.model.TradingReturnpolicyExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from trading_returnpolicy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.base.database.trading.model.TradingReturnpolicy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into trading_returnpolicy (id, EAN, ExtendedHolidayReturns, 
      RefundOption, RestockingFeeValueOption, 
      ReturnsAcceptedOption, ReturnsWithinOption, 
      ShippingCostPaidByOption, WarrantyDurationOption, 
      WarrantyOfferedOption, WarrantyTypeOption, 
      create_user, create_time, uuid, 
      name, site, Description
      )
    values (#{id,jdbcType=BIGINT}, #{ean,jdbcType=VARCHAR}, #{extendedholidayreturns,jdbcType=VARCHAR}, 
      #{refundoption,jdbcType=VARCHAR}, #{restockingfeevalueoption,jdbcType=VARCHAR}, 
      #{returnsacceptedoption,jdbcType=VARCHAR}, #{returnswithinoption,jdbcType=VARCHAR}, 
      #{shippingcostpaidbyoption,jdbcType=VARCHAR}, #{warrantydurationoption,jdbcType=VARCHAR}, 
      #{warrantyofferedoption,jdbcType=VARCHAR}, #{warrantytypeoption,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{uuid,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{site,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
      <selectKey resultType="long" keyProperty="id" order="AFTER">
          SELECT LAST_INSERT_ID()
      </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.base.database.trading.model.TradingReturnpolicy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into trading_returnpolicy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ean != null">
        EAN,
      </if>
      <if test="extendedholidayreturns != null">
        ExtendedHolidayReturns,
      </if>
      <if test="refundoption != null">
        RefundOption,
      </if>
      <if test="restockingfeevalueoption != null">
        RestockingFeeValueOption,
      </if>
      <if test="returnsacceptedoption != null">
        ReturnsAcceptedOption,
      </if>
      <if test="returnswithinoption != null">
        ReturnsWithinOption,
      </if>
      <if test="shippingcostpaidbyoption != null">
        ShippingCostPaidByOption,
      </if>
      <if test="warrantydurationoption != null">
        WarrantyDurationOption,
      </if>
      <if test="warrantyofferedoption != null">
        WarrantyOfferedOption,
      </if>
      <if test="warrantytypeoption != null">
        WarrantyTypeOption,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="site != null">
        site,
      </if>
      <if test="description != null">
        Description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ean != null">
        #{ean,jdbcType=VARCHAR},
      </if>
      <if test="extendedholidayreturns != null">
        #{extendedholidayreturns,jdbcType=VARCHAR},
      </if>
      <if test="refundoption != null">
        #{refundoption,jdbcType=VARCHAR},
      </if>
      <if test="restockingfeevalueoption != null">
        #{restockingfeevalueoption,jdbcType=VARCHAR},
      </if>
      <if test="returnsacceptedoption != null">
        #{returnsacceptedoption,jdbcType=VARCHAR},
      </if>
      <if test="returnswithinoption != null">
        #{returnswithinoption,jdbcType=VARCHAR},
      </if>
      <if test="shippingcostpaidbyoption != null">
        #{shippingcostpaidbyoption,jdbcType=VARCHAR},
      </if>
      <if test="warrantydurationoption != null">
        #{warrantydurationoption,jdbcType=VARCHAR},
      </if>
      <if test="warrantyofferedoption != null">
        #{warrantyofferedoption,jdbcType=VARCHAR},
      </if>
      <if test="warrantytypeoption != null">
        #{warrantytypeoption,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        #{site,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
      <selectKey resultType="long" keyProperty="id" order="AFTER">
          SELECT LAST_INSERT_ID()
      </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.base.database.trading.model.TradingReturnpolicyExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from trading_returnpolicy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_returnpolicy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.ean != null">
        EAN = #{record.ean,jdbcType=VARCHAR},
      </if>
      <if test="record.extendedholidayreturns != null">
        ExtendedHolidayReturns = #{record.extendedholidayreturns,jdbcType=VARCHAR},
      </if>
      <if test="record.refundoption != null">
        RefundOption = #{record.refundoption,jdbcType=VARCHAR},
      </if>
      <if test="record.restockingfeevalueoption != null">
        RestockingFeeValueOption = #{record.restockingfeevalueoption,jdbcType=VARCHAR},
      </if>
      <if test="record.returnsacceptedoption != null">
        ReturnsAcceptedOption = #{record.returnsacceptedoption,jdbcType=VARCHAR},
      </if>
      <if test="record.returnswithinoption != null">
        ReturnsWithinOption = #{record.returnswithinoption,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingcostpaidbyoption != null">
        ShippingCostPaidByOption = #{record.shippingcostpaidbyoption,jdbcType=VARCHAR},
      </if>
      <if test="record.warrantydurationoption != null">
        WarrantyDurationOption = #{record.warrantydurationoption,jdbcType=VARCHAR},
      </if>
      <if test="record.warrantyofferedoption != null">
        WarrantyOfferedOption = #{record.warrantyofferedoption,jdbcType=VARCHAR},
      </if>
      <if test="record.warrantytypeoption != null">
        WarrantyTypeOption = #{record.warrantytypeoption,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.site != null">
        site = #{record.site,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        Description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_returnpolicy
    set id = #{record.id,jdbcType=BIGINT},
      EAN = #{record.ean,jdbcType=VARCHAR},
      ExtendedHolidayReturns = #{record.extendedholidayreturns,jdbcType=VARCHAR},
      RefundOption = #{record.refundoption,jdbcType=VARCHAR},
      RestockingFeeValueOption = #{record.restockingfeevalueoption,jdbcType=VARCHAR},
      ReturnsAcceptedOption = #{record.returnsacceptedoption,jdbcType=VARCHAR},
      ReturnsWithinOption = #{record.returnswithinoption,jdbcType=VARCHAR},
      ShippingCostPaidByOption = #{record.shippingcostpaidbyoption,jdbcType=VARCHAR},
      WarrantyDurationOption = #{record.warrantydurationoption,jdbcType=VARCHAR},
      WarrantyOfferedOption = #{record.warrantyofferedoption,jdbcType=VARCHAR},
      WarrantyTypeOption = #{record.warrantytypeoption,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      site = #{record.site,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_returnpolicy
    set id = #{record.id,jdbcType=BIGINT},
      EAN = #{record.ean,jdbcType=VARCHAR},
      ExtendedHolidayReturns = #{record.extendedholidayreturns,jdbcType=VARCHAR},
      RefundOption = #{record.refundoption,jdbcType=VARCHAR},
      RestockingFeeValueOption = #{record.restockingfeevalueoption,jdbcType=VARCHAR},
      ReturnsAcceptedOption = #{record.returnsacceptedoption,jdbcType=VARCHAR},
      ReturnsWithinOption = #{record.returnswithinoption,jdbcType=VARCHAR},
      ShippingCostPaidByOption = #{record.shippingcostpaidbyoption,jdbcType=VARCHAR},
      WarrantyDurationOption = #{record.warrantydurationoption,jdbcType=VARCHAR},
      WarrantyOfferedOption = #{record.warrantyofferedoption,jdbcType=VARCHAR},
      WarrantyTypeOption = #{record.warrantytypeoption,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      uuid = #{record.uuid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      site = #{record.site,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.base.database.trading.model.TradingReturnpolicy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_returnpolicy
    <set>
      <if test="ean != null">
        EAN = #{ean,jdbcType=VARCHAR},
      </if>
      <if test="extendedholidayreturns != null">
        ExtendedHolidayReturns = #{extendedholidayreturns,jdbcType=VARCHAR},
      </if>
      <if test="refundoption != null">
        RefundOption = #{refundoption,jdbcType=VARCHAR},
      </if>
      <if test="restockingfeevalueoption != null">
        RestockingFeeValueOption = #{restockingfeevalueoption,jdbcType=VARCHAR},
      </if>
      <if test="returnsacceptedoption != null">
        ReturnsAcceptedOption = #{returnsacceptedoption,jdbcType=VARCHAR},
      </if>
      <if test="returnswithinoption != null">
        ReturnsWithinOption = #{returnswithinoption,jdbcType=VARCHAR},
      </if>
      <if test="shippingcostpaidbyoption != null">
        ShippingCostPaidByOption = #{shippingcostpaidbyoption,jdbcType=VARCHAR},
      </if>
      <if test="warrantydurationoption != null">
        WarrantyDurationOption = #{warrantydurationoption,jdbcType=VARCHAR},
      </if>
      <if test="warrantyofferedoption != null">
        WarrantyOfferedOption = #{warrantyofferedoption,jdbcType=VARCHAR},
      </if>
      <if test="warrantytypeoption != null">
        WarrantyTypeOption = #{warrantytypeoption,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        site = #{site,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.base.database.trading.model.TradingReturnpolicy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_returnpolicy
    set EAN = #{ean,jdbcType=VARCHAR},
      ExtendedHolidayReturns = #{extendedholidayreturns,jdbcType=VARCHAR},
      RefundOption = #{refundoption,jdbcType=VARCHAR},
      RestockingFeeValueOption = #{restockingfeevalueoption,jdbcType=VARCHAR},
      ReturnsAcceptedOption = #{returnsacceptedoption,jdbcType=VARCHAR},
      ReturnsWithinOption = #{returnswithinoption,jdbcType=VARCHAR},
      ShippingCostPaidByOption = #{shippingcostpaidbyoption,jdbcType=VARCHAR},
      WarrantyDurationOption = #{warrantydurationoption,jdbcType=VARCHAR},
      WarrantyOfferedOption = #{warrantyofferedoption,jdbcType=VARCHAR},
      WarrantyTypeOption = #{warrantytypeoption,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      uuid = #{uuid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR},
      Description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.base.database.trading.model.TradingReturnpolicy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_returnpolicy
    set EAN = #{ean,jdbcType=VARCHAR},
      ExtendedHolidayReturns = #{extendedholidayreturns,jdbcType=VARCHAR},
      RefundOption = #{refundoption,jdbcType=VARCHAR},
      RestockingFeeValueOption = #{restockingfeevalueoption,jdbcType=VARCHAR},
      ReturnsAcceptedOption = #{returnsacceptedoption,jdbcType=VARCHAR},
      ReturnsWithinOption = #{returnswithinoption,jdbcType=VARCHAR},
      ShippingCostPaidByOption = #{shippingcostpaidbyoption,jdbcType=VARCHAR},
      WarrantyDurationOption = #{warrantydurationoption,jdbcType=VARCHAR},
      WarrantyOfferedOption = #{warrantyofferedoption,jdbcType=VARCHAR},
      WarrantyTypeOption = #{warrantytypeoption,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      uuid = #{uuid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>