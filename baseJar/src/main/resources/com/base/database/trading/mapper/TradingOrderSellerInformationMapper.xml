<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.base.database.trading.mapper.TradingOrderSellerInformationMapper">
  <resultMap id="BaseResultMap" type="com.base.database.trading.model.TradingOrderSellerInformation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="allowPaymentEdit" jdbcType="VARCHAR" property="allowpaymentedit" />
    <result column="checkoutEnabled" jdbcType="VARCHAR" property="checkoutenabled" />
    <result column="cIPBankAccountStored" jdbcType="VARCHAR" property="cipbankaccountstored" />
    <result column="goodStanding" jdbcType="VARCHAR" property="goodstanding" />
    <result column="liveAuctionAuthorized" jdbcType="VARCHAR" property="liveauctionauthorized" />
    <result column="merchandizingPref" jdbcType="VARCHAR" property="merchandizingpref" />
    <result column="qualifiesForB2BVAT" jdbcType="VARCHAR" property="qualifiesforb2bvat" />
    <result column="sellerLevel" jdbcType="VARCHAR" property="sellerlevel" />
    <result column="storeOwner" jdbcType="VARCHAR" property="storeowner" />
    <result column="storeURL" jdbcType="VARCHAR" property="storeurl" />
    <result column="expressEligible" jdbcType="VARCHAR" property="expresseligible" />
    <result column="expressWallet" jdbcType="VARCHAR" property="expresswallet" />
    <result column="safePaymentExempt" jdbcType="VARCHAR" property="safepaymentexempt" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, allowPaymentEdit, checkoutEnabled, cIPBankAccountStored, goodStanding, liveAuctionAuthorized, 
    merchandizingPref, qualifiesForB2BVAT, sellerLevel, storeOwner, storeURL, expressEligible, 
    expressWallet, safePaymentExempt, create_user, create_time, uuid
  </sql>
  <select id="selectByExample" parameterType="com.base.database.trading.model.TradingOrderSellerInformationExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trading_order_seller_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from trading_order_seller_information
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from trading_order_seller_information
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.base.database.trading.model.TradingOrderSellerInformationExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from trading_order_seller_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.base.database.trading.model.TradingOrderSellerInformation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into trading_order_seller_information (id, allowPaymentEdit, checkoutEnabled, 
      cIPBankAccountStored, goodStanding, liveAuctionAuthorized, 
      merchandizingPref, qualifiesForB2BVAT, 
      sellerLevel, storeOwner, storeURL, 
      expressEligible, expressWallet, safePaymentExempt, 
      create_user, create_time, uuid
      )
    values (#{id,jdbcType=BIGINT}, #{allowpaymentedit,jdbcType=VARCHAR}, #{checkoutenabled,jdbcType=VARCHAR}, 
      #{cipbankaccountstored,jdbcType=VARCHAR}, #{goodstanding,jdbcType=VARCHAR}, #{liveauctionauthorized,jdbcType=VARCHAR}, 
      #{merchandizingpref,jdbcType=VARCHAR}, #{qualifiesforb2bvat,jdbcType=VARCHAR}, 
      #{sellerlevel,jdbcType=VARCHAR}, #{storeowner,jdbcType=VARCHAR}, #{storeurl,jdbcType=VARCHAR}, 
      #{expresseligible,jdbcType=VARCHAR}, #{expresswallet,jdbcType=VARCHAR}, #{safepaymentexempt,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{uuid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.base.database.trading.model.TradingOrderSellerInformation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into trading_order_seller_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="allowpaymentedit != null">
        allowPaymentEdit,
      </if>
      <if test="checkoutenabled != null">
        checkoutEnabled,
      </if>
      <if test="cipbankaccountstored != null">
        cIPBankAccountStored,
      </if>
      <if test="goodstanding != null">
        goodStanding,
      </if>
      <if test="liveauctionauthorized != null">
        liveAuctionAuthorized,
      </if>
      <if test="merchandizingpref != null">
        merchandizingPref,
      </if>
      <if test="qualifiesforb2bvat != null">
        qualifiesForB2BVAT,
      </if>
      <if test="sellerlevel != null">
        sellerLevel,
      </if>
      <if test="storeowner != null">
        storeOwner,
      </if>
      <if test="storeurl != null">
        storeURL,
      </if>
      <if test="expresseligible != null">
        expressEligible,
      </if>
      <if test="expresswallet != null">
        expressWallet,
      </if>
      <if test="safepaymentexempt != null">
        safePaymentExempt,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="allowpaymentedit != null">
        #{allowpaymentedit,jdbcType=VARCHAR},
      </if>
      <if test="checkoutenabled != null">
        #{checkoutenabled,jdbcType=VARCHAR},
      </if>
      <if test="cipbankaccountstored != null">
        #{cipbankaccountstored,jdbcType=VARCHAR},
      </if>
      <if test="goodstanding != null">
        #{goodstanding,jdbcType=VARCHAR},
      </if>
      <if test="liveauctionauthorized != null">
        #{liveauctionauthorized,jdbcType=VARCHAR},
      </if>
      <if test="merchandizingpref != null">
        #{merchandizingpref,jdbcType=VARCHAR},
      </if>
      <if test="qualifiesforb2bvat != null">
        #{qualifiesforb2bvat,jdbcType=VARCHAR},
      </if>
      <if test="sellerlevel != null">
        #{sellerlevel,jdbcType=VARCHAR},
      </if>
      <if test="storeowner != null">
        #{storeowner,jdbcType=VARCHAR},
      </if>
      <if test="storeurl != null">
        #{storeurl,jdbcType=VARCHAR},
      </if>
      <if test="expresseligible != null">
        #{expresseligible,jdbcType=VARCHAR},
      </if>
      <if test="expresswallet != null">
        #{expresswallet,jdbcType=VARCHAR},
      </if>
      <if test="safepaymentexempt != null">
        #{safepaymentexempt,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.base.database.trading.model.TradingOrderSellerInformationExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from trading_order_seller_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_order_seller_information
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.allowpaymentedit != null">
        allowPaymentEdit = #{record.allowpaymentedit,jdbcType=VARCHAR},
      </if>
      <if test="record.checkoutenabled != null">
        checkoutEnabled = #{record.checkoutenabled,jdbcType=VARCHAR},
      </if>
      <if test="record.cipbankaccountstored != null">
        cIPBankAccountStored = #{record.cipbankaccountstored,jdbcType=VARCHAR},
      </if>
      <if test="record.goodstanding != null">
        goodStanding = #{record.goodstanding,jdbcType=VARCHAR},
      </if>
      <if test="record.liveauctionauthorized != null">
        liveAuctionAuthorized = #{record.liveauctionauthorized,jdbcType=VARCHAR},
      </if>
      <if test="record.merchandizingpref != null">
        merchandizingPref = #{record.merchandizingpref,jdbcType=VARCHAR},
      </if>
      <if test="record.qualifiesforb2bvat != null">
        qualifiesForB2BVAT = #{record.qualifiesforb2bvat,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerlevel != null">
        sellerLevel = #{record.sellerlevel,jdbcType=VARCHAR},
      </if>
      <if test="record.storeowner != null">
        storeOwner = #{record.storeowner,jdbcType=VARCHAR},
      </if>
      <if test="record.storeurl != null">
        storeURL = #{record.storeurl,jdbcType=VARCHAR},
      </if>
      <if test="record.expresseligible != null">
        expressEligible = #{record.expresseligible,jdbcType=VARCHAR},
      </if>
      <if test="record.expresswallet != null">
        expressWallet = #{record.expresswallet,jdbcType=VARCHAR},
      </if>
      <if test="record.safepaymentexempt != null">
        safePaymentExempt = #{record.safepaymentexempt,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_order_seller_information
    set id = #{record.id,jdbcType=BIGINT},
      allowPaymentEdit = #{record.allowpaymentedit,jdbcType=VARCHAR},
      checkoutEnabled = #{record.checkoutenabled,jdbcType=VARCHAR},
      cIPBankAccountStored = #{record.cipbankaccountstored,jdbcType=VARCHAR},
      goodStanding = #{record.goodstanding,jdbcType=VARCHAR},
      liveAuctionAuthorized = #{record.liveauctionauthorized,jdbcType=VARCHAR},
      merchandizingPref = #{record.merchandizingpref,jdbcType=VARCHAR},
      qualifiesForB2BVAT = #{record.qualifiesforb2bvat,jdbcType=VARCHAR},
      sellerLevel = #{record.sellerlevel,jdbcType=VARCHAR},
      storeOwner = #{record.storeowner,jdbcType=VARCHAR},
      storeURL = #{record.storeurl,jdbcType=VARCHAR},
      expressEligible = #{record.expresseligible,jdbcType=VARCHAR},
      expressWallet = #{record.expresswallet,jdbcType=VARCHAR},
      safePaymentExempt = #{record.safepaymentexempt,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      uuid = #{record.uuid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.base.database.trading.model.TradingOrderSellerInformation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_order_seller_information
    <set>
      <if test="allowpaymentedit != null">
        allowPaymentEdit = #{allowpaymentedit,jdbcType=VARCHAR},
      </if>
      <if test="checkoutenabled != null">
        checkoutEnabled = #{checkoutenabled,jdbcType=VARCHAR},
      </if>
      <if test="cipbankaccountstored != null">
        cIPBankAccountStored = #{cipbankaccountstored,jdbcType=VARCHAR},
      </if>
      <if test="goodstanding != null">
        goodStanding = #{goodstanding,jdbcType=VARCHAR},
      </if>
      <if test="liveauctionauthorized != null">
        liveAuctionAuthorized = #{liveauctionauthorized,jdbcType=VARCHAR},
      </if>
      <if test="merchandizingpref != null">
        merchandizingPref = #{merchandizingpref,jdbcType=VARCHAR},
      </if>
      <if test="qualifiesforb2bvat != null">
        qualifiesForB2BVAT = #{qualifiesforb2bvat,jdbcType=VARCHAR},
      </if>
      <if test="sellerlevel != null">
        sellerLevel = #{sellerlevel,jdbcType=VARCHAR},
      </if>
      <if test="storeowner != null">
        storeOwner = #{storeowner,jdbcType=VARCHAR},
      </if>
      <if test="storeurl != null">
        storeURL = #{storeurl,jdbcType=VARCHAR},
      </if>
      <if test="expresseligible != null">
        expressEligible = #{expresseligible,jdbcType=VARCHAR},
      </if>
      <if test="expresswallet != null">
        expressWallet = #{expresswallet,jdbcType=VARCHAR},
      </if>
      <if test="safepaymentexempt != null">
        safePaymentExempt = #{safepaymentexempt,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.base.database.trading.model.TradingOrderSellerInformation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update trading_order_seller_information
    set allowPaymentEdit = #{allowpaymentedit,jdbcType=VARCHAR},
      checkoutEnabled = #{checkoutenabled,jdbcType=VARCHAR},
      cIPBankAccountStored = #{cipbankaccountstored,jdbcType=VARCHAR},
      goodStanding = #{goodstanding,jdbcType=VARCHAR},
      liveAuctionAuthorized = #{liveauctionauthorized,jdbcType=VARCHAR},
      merchandizingPref = #{merchandizingpref,jdbcType=VARCHAR},
      qualifiesForB2BVAT = #{qualifiesforb2bvat,jdbcType=VARCHAR},
      sellerLevel = #{sellerlevel,jdbcType=VARCHAR},
      storeOwner = #{storeowner,jdbcType=VARCHAR},
      storeURL = #{storeurl,jdbcType=VARCHAR},
      expressEligible = #{expresseligible,jdbcType=VARCHAR},
      expressWallet = #{expresswallet,jdbcType=VARCHAR},
      safePaymentExempt = #{safepaymentexempt,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      uuid = #{uuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>