<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--数据源配置-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${datasource.driverClassName}" />
        <property name="defaultAutoCommit" value="${datasource.defaultAutoCommit}" />
        <property name="url" value="${datasource.url}" />
        <property name="username" value="${datasource.username}" />
        <property name="password" value="${datasource.password}" />
        <property name="maxActive" value="${datasource.maxActive}"/>
    </bean>
    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"><ref bean="dataSource"/></property>
    </bean>
    <!--事务配置-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <!--mybatis配置-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:baseJar/mybatis/mybatis-config.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.**.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
    </bean>
    <bean id="sqlSessionTemplateBean" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactoryBean"/>
    </bean>


    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <value>classpath*:/baseJar/config/db.properties</value>
                <value>file:/var/tembinConfig/config/db.properties</value>
            </list>
        </property>
    </bean>

    <!--负责post的线程池-->
    <bean id="postTaskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="12" />  <!-- 并发线程数,想达到真正的并发效果,最好对应CPU的线程数及核心数 -->
        <property name="keepAliveSeconds" value="20" />
        <property name="maxPoolSize" value="60" />     <!-- 最大线程池容量 -->
        <property name="queueCapacity" value="65" />   <!-- 超过最大线程池容量后,允许的线程队列数 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>

        <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
        <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
        <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
        <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
    </bean>
    <bean id="postTaskExecutor2"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
    <property name="corePoolSize" value="5" />  <!-- 并发线程数,想达到真正的并发效果,最好对应CPU的线程数及核心数 -->
    <property name="keepAliveSeconds" value="20" />
    <property name="maxPoolSize" value="60" />     <!-- 最大线程池容量 -->
    <property name="queueCapacity" value="65" />   <!-- 超过最大线程池容量后,允许的线程队列数 -->
    <property name="rejectedExecutionHandler">
        <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
    </property>
    </bean>


    <!--线程池-->
    <bean id="scheduleTaskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />  <!-- 并发线程数,想达到真正的并发效果,最好对应CPU的线程数及核心数 -->
        <property name="keepAliveSeconds" value="30" />
        <property name="maxPoolSize" value="30" />     <!-- 最大线程池容量 -->
        <property name="queueCapacity" value="35" />   <!-- 超过最大线程池容量后,允许的线程队列数 -->
        <property name="rejectedExecutionHandler"> <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" /> </property>
    </bean>

</beans>