package com.base.database.trading.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TradingTimerListingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public TradingTimerListingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTimerIsNull() {
            addCriterion("timer is null");
            return (Criteria) this;
        }

        public Criteria andTimerIsNotNull() {
            addCriterion("timer is not null");
            return (Criteria) this;
        }

        public Criteria andTimerEqualTo(String value) {
            addCriterion("timer =", value, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerNotEqualTo(String value) {
            addCriterion("timer <>", value, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerGreaterThan(String value) {
            addCriterion("timer >", value, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerGreaterThanOrEqualTo(String value) {
            addCriterion("timer >=", value, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerLessThan(String value) {
            addCriterion("timer <", value, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerLessThanOrEqualTo(String value) {
            addCriterion("timer <=", value, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerLike(String value) {
            addCriterion("timer like", value, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerNotLike(String value) {
            addCriterion("timer not like", value, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerIn(List<String> values) {
            addCriterion("timer in", values, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerNotIn(List<String> values) {
            addCriterion("timer not in", values, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerBetween(String value1, String value2) {
            addCriterion("timer between", value1, value2, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerNotBetween(String value1, String value2) {
            addCriterion("timer not between", value1, value2, "timer");
            return (Criteria) this;
        }

        public Criteria andTimerFlagIsNull() {
            addCriterion("timer_flag is null");
            return (Criteria) this;
        }

        public Criteria andTimerFlagIsNotNull() {
            addCriterion("timer_flag is not null");
            return (Criteria) this;
        }

        public Criteria andTimerFlagEqualTo(String value) {
            addCriterion("timer_flag =", value, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagNotEqualTo(String value) {
            addCriterion("timer_flag <>", value, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagGreaterThan(String value) {
            addCriterion("timer_flag >", value, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagGreaterThanOrEqualTo(String value) {
            addCriterion("timer_flag >=", value, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagLessThan(String value) {
            addCriterion("timer_flag <", value, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagLessThanOrEqualTo(String value) {
            addCriterion("timer_flag <=", value, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagLike(String value) {
            addCriterion("timer_flag like", value, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagNotLike(String value) {
            addCriterion("timer_flag not like", value, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagIn(List<String> values) {
            addCriterion("timer_flag in", values, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagNotIn(List<String> values) {
            addCriterion("timer_flag not in", values, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagBetween(String value1, String value2) {
            addCriterion("timer_flag between", value1, value2, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andTimerFlagNotBetween(String value1, String value2) {
            addCriterion("timer_flag not between", value1, value2, "timerFlag");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeIsNull() {
            addCriterion("run_start_time is null");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeIsNotNull() {
            addCriterion("run_start_time is not null");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeEqualTo(Date value) {
            addCriterionForJDBCTime("run_start_time =", value, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("run_start_time <>", value, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("run_start_time >", value, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("run_start_time >=", value, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeLessThan(Date value) {
            addCriterionForJDBCTime("run_start_time <", value, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("run_start_time <=", value, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeIn(List<Date> values) {
            addCriterionForJDBCTime("run_start_time in", values, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("run_start_time not in", values, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("run_start_time between", value1, value2, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunStartTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("run_start_time not between", value1, value2, "runStartTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeIsNull() {
            addCriterion("run_end_time is null");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeIsNotNull() {
            addCriterion("run_end_time is not null");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeEqualTo(Date value) {
            addCriterionForJDBCTime("run_end_time =", value, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("run_end_time <>", value, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("run_end_time >", value, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("run_end_time >=", value, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeLessThan(Date value) {
            addCriterionForJDBCTime("run_end_time <", value, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("run_end_time <=", value, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeIn(List<Date> values) {
            addCriterionForJDBCTime("run_end_time in", values, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("run_end_time not in", values, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("run_end_time between", value1, value2, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andRunEndTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("run_end_time not between", value1, value2, "runEndTime");
            return (Criteria) this;
        }

        public Criteria andItemIsNull() {
            addCriterion("item is null");
            return (Criteria) this;
        }

        public Criteria andItemIsNotNull() {
            addCriterion("item is not null");
            return (Criteria) this;
        }

        public Criteria andItemEqualTo(Long value) {
            addCriterion("item =", value, "item");
            return (Criteria) this;
        }

        public Criteria andItemNotEqualTo(Long value) {
            addCriterion("item <>", value, "item");
            return (Criteria) this;
        }

        public Criteria andItemGreaterThan(Long value) {
            addCriterion("item >", value, "item");
            return (Criteria) this;
        }

        public Criteria andItemGreaterThanOrEqualTo(Long value) {
            addCriterion("item >=", value, "item");
            return (Criteria) this;
        }

        public Criteria andItemLessThan(Long value) {
            addCriterion("item <", value, "item");
            return (Criteria) this;
        }

        public Criteria andItemLessThanOrEqualTo(Long value) {
            addCriterion("item <=", value, "item");
            return (Criteria) this;
        }

        public Criteria andItemIn(List<Long> values) {
            addCriterion("item in", values, "item");
            return (Criteria) this;
        }

        public Criteria andItemNotIn(List<Long> values) {
            addCriterion("item not in", values, "item");
            return (Criteria) this;
        }

        public Criteria andItemBetween(Long value1, Long value2) {
            addCriterion("item between", value1, value2, "item");
            return (Criteria) this;
        }

        public Criteria andItemNotBetween(Long value1, Long value2) {
            addCriterion("item not between", value1, value2, "item");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("create_user is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("create_user is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(Long value) {
            addCriterion("create_user =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(Long value) {
            addCriterion("create_user <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(Long value) {
            addCriterion("create_user >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(Long value) {
            addCriterion("create_user >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(Long value) {
            addCriterion("create_user <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(Long value) {
            addCriterion("create_user <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<Long> values) {
            addCriterion("create_user in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<Long> values) {
            addCriterion("create_user not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(Long value1, Long value2) {
            addCriterion("create_user between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(Long value1, Long value2) {
            addCriterion("create_user not between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUuidIsNull() {
            addCriterion("uuid is null");
            return (Criteria) this;
        }

        public Criteria andUuidIsNotNull() {
            addCriterion("uuid is not null");
            return (Criteria) this;
        }

        public Criteria andUuidEqualTo(String value) {
            addCriterion("uuid =", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotEqualTo(String value) {
            addCriterion("uuid <>", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThan(String value) {
            addCriterion("uuid >", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidGreaterThanOrEqualTo(String value) {
            addCriterion("uuid >=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThan(String value) {
            addCriterion("uuid <", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLessThanOrEqualTo(String value) {
            addCriterion("uuid <=", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidLike(String value) {
            addCriterion("uuid like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotLike(String value) {
            addCriterion("uuid not like", value, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidIn(List<String> values) {
            addCriterion("uuid in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotIn(List<String> values) {
            addCriterion("uuid not in", values, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidBetween(String value1, String value2) {
            addCriterion("uuid between", value1, value2, "uuid");
            return (Criteria) this;
        }

        public Criteria andUuidNotBetween(String value1, String value2) {
            addCriterion("uuid not between", value1, value2, "uuid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table trading_timer_listing
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table trading_timer_listing
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}